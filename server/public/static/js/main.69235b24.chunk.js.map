{"version":3,"sources":["components/auth/AuthService.jsx","components/auth/Signup.jsx","components/auth/Login.jsx","components/home/HomePage.jsx","api/service.js","components/profile/Profile.jsx","App.js","serviceWorker.js","index.js"],"names":["AuthService","_this","this","Object","classCallCheck","signup","profile","service","post","then","response","data","login","username","password","loggedin","get","logout","axios","create","baseURL","concat","process","API_URL","withCredentials","newUsername","put","res","catch","err","console","log","Signup","props","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","state","campus","course","setState","getUser","error","handleChange","_event$target","target","name","value","objectSpread","defineProperty","_this2","react_default","a","createElement","onSubmit","type","onChange","e","react_router_dom","to","Component","Login","redirect","react_router","Home","Service","errorHandler","handleUpload","theFile","Profile","handleSubmitUpdateUsername","authService","updateUsername","usernameUpdateConfirmation","newState","userUpdated","showTickOk","handleFileUpload","files","uploadData","FormData","append","apiService","imageUrl","secure_url","handleSubmit","saveNewPhoto","logoutUser","loggedInUser","userLoad","file","user","_this3","handleChangeUsername","onClick","App","getTheUser","userObj","className","exact","path","component","HomePage","render","auth_Signup","auth_Login","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.69235b24.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.API_URL}/auth`,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (profile) => {\n    return this.service.post('/signup', {profile})\n    .then(response => response.data) \n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.post('/logout',)\n    .then(response => response.data)\n  }\n\n  updateUsername(newUsername) {\n    return this.service.put('/update', {username: newUsername})\n      .then(res => res.data)\n      .catch(err => {\n        console.log(err)\n      });\n  }\n\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport AuthService from './AuthService';\nimport { Link } from 'react-router-dom';\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '', campus: 'Madrid', course: 'WebDev' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const profile = {\n      username: this.state.username, \n      password: this.state.password, \n      campus: this.state.campus, \n      course: this.state.course\n    }\n\n    this.service\n      .signup(profile)\n      .then((response) => {\n        this.setState({\n          username: '',\n          password: '',\n          campus: '',\n          course: '',\n        });\n        this.props.getUser(response)\n      })\n      .catch((error) => console.log(error));\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ ...this.state, [name]: value });\n\n    console.log(this.state)\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>IronProfile</h1>\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={(e) => this.handleChange(e)}\n          />\n\n          <label>Password:</label>\n          <textarea\n            name=\"password\"\n            value={this.state.password}\n            onChange={(e) => this.handleChange(e)}\n          />\n          \n          <select name=\"campus\" onChange={(e) => this.handleChange(e)}>\n            <option value=\"Madrid\">Madrid</option>\n            <option value=\"Barcelona\">Barcelona</option>\n            <option value=\"Miami\">Miami</option>\n            <option value=\"Paris\">Paris</option>\n            <option value=\"Berlin\">Berlin</option>\n            <option value=\"Amsterdam\">Amsterdam</option>\n            <option value=\"Mexico\">Mexico</option>\n            <option value=\"Sao Paulo\">Sao Paulo</option>\n          </select>\n\n          <select name=\"course\" onChange={(e) => this.handleChange(e)}>\n            <option value=\"WebDev\">WebDev</option>\n            <option value=\"UX/UI\">UX/UI</option>\n            <option value=\"Data Analytics\">Data Analytics</option>\n          </select>\n\n          <input type=\"submit\" value=\"Create the account\" />\n        </form>\n\n        <p>\n          Already have account?\n          <Link to={'/login'}> Login</Link>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport AuthService from './AuthService';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '', redirect: false };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n    \n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          redirect: true,\n          error: false\n        });\n      console.log(response)\n        this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({...this.state, [name]: value });\n  }\n\n  render() {\n\n    return (\n    <div>\n      {this.state.redirect ? <Redirect to=\"/profile\"/> : \"\"}\n\n      <h3>Please, login to our site</h3>\n\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n      If you don't have an account yet, you can create your account \n      <Link to={'/signup'}> here</Link>\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>)\n  }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div>\n        <h1>IronProfile</h1>\n        <p>Today we will create an app with authoritation, adding some cool styles!</p>\n        <Link to={'/signup'}>Sign Up</Link>\n        <Link to={'/login'}>Log In</Link>\n      </div>\n    )\n  }\n}","import axios from 'axios';\n\nclass Service {\n  constructor() {\n    let service = axios.create({\n      baseURL: 'http://localhost:5000/api',\n    });\n    this.service = service;\n  }\n\n  errorHandler = err => {\n    console.error(err);\n    throw err;\n  };\n\n  handleUpload = (theFile => {\n    return this.service.post('/upload', theFile)\n      .then(res => res.data)\n      .catch(this.errorHandler);\n  })\n\n}\n\n\nexport default Service;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport apiService from '../../api/service';\nimport AuthService from '../auth/AuthService'\n\nexport default class Profile extends Component {\n  constructor(props) {\n\t\tsuper(props);\n    this.state = { username: '', campus: '', course: '', imageUrl: ''};\n    this.authService = new AuthService();\n    this.apiService = new apiService();\n    this.userLoad()\n\t}\n  \n  handleSubmitUpdateUsername = e => {\n    e.preventDefault()\n\n    this.authService.updateUsername(this.state.username).then(usernameUpdateConfirmation =>{\n\n      let newState = {\n        ...this.state,\n        username: usernameUpdateConfirmation.newUsername\n      }\n\n      if (usernameUpdateConfirmation.userUpdated) {\n        newState.showTickOk = true\n      }\n      \n      this.setState(newState)\n    })\n  }\n\n  handleFileUpload = e => {\n    console.log(\"The file to be uploaded is: \", e.target.files[0]);\n\n    const uploadData = new FormData();\n    uploadData.append(\"imageUrl\", e.target.files[0]);\n    this.apiService.handleUpload(uploadData)\n    .then(response => {\n      this.setState({...this.state, imageUrl: response.secure_url})\n    })\n    .catch(err => {\n      console.log(\"Error while uploading the file: \", err);\n    });\n  }\n  \n  handleSubmit = e => {\n    e.preventDefault();\n    this.apiService.saveNewPhoto(this.state)\n    .then(res => {\n      console.log('added: ', res);\n    })\n    .catch(err => {\n      console.log(\"Error while adding the photo: \", err);\n    });\n  }  \n  \n  handleChange(e) {\n    this.setState({\n      ...this.state,\n      file: e.target.files[0]\n    })\n  }\n  \n  handleChangeUsername(e) {\n    this.setState({\n      ...this.state,\n      username: e.target.value\n    })\n  }\n  \n  logoutUser = () =>{\n    this.authService.logout()\n    .then((data) => {     \n      this.setState({ loggedInUser: null });\n    })\n  }\n  \n  userLoad() {\n    this.authService.loggedin()\n    .then(user=>this.setState({...this.state,user}));\n\t}\n  \n  render() {\n    console.log(this.state.user)\n    if(this.state.user){\n      return(\n        <div>\n        <h1>Profile</h1>\n        <ul>\n          <p>Image</p>\n          <li>{this.state.user.imageUrl}</li>\n          <p>Username</p>\n          <li>{this.state.user.username}</li>\n          <p>Campus</p>\n          <li>{this.state.user.campus}</li>\n          <p>Course</p>\n          <li>{this.state.user.course}</li>\n        </ul>\n        <h2>Photo Upload</h2>\n\n        {(this.state.showTickOk) ? <p>updated ok</p> : \"\"}\n\n        <form onSubmit={(e)=>this.handleSubmitUpdateUsername(e)}>\n          <input type=\"text\" value={this.state.username} onChange={(e)=>this.handleChangeUsername(e)} />\n          <input type=\"file\" onChange={(e) => this.handleFileUpload(e)}/>  <br/>\n          <button type=\"submit\">Save Profile</button>\n        </form>\n\n         {/* <img key={this.state.imageUrl} src={this.state.imageUrl} alt=\"\" /> */}\n          <Link to='/'>\n            <button onClick={() => this.logoutUser()}>Logout</button>\n          </Link> \n      </div>\n    )\n    }else{\n      return(\n        <h1>LOADING...</h1>\n      )\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport HomePage from './components/home/HomePage'\nimport { Switch, Route } from 'react-router-dom';\nimport AuthService from './components/auth/AuthService';\nimport Profile from './components/profile/Profile';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  fetchUser(){\n    if( this.state.loggedInUser === null ){\n      this.service.loggedin()\n      .then(response =>{\n        this.setState({\n          loggedInUser:  response\n        }) \n      })\n      .catch( err =>{\n        this.setState({\n          loggedInUser:  false\n        }) \n      })\n    }\n  }\n\n  getTheUser= (userObj) => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n  \n  render() {\n    return(\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={HomePage}/>\n          <Route exact path=\"/profile\" component={Profile}/>\n          <Route exact path=\"/signup\" render={() => <Signup getUser={this.getTheUser}/>}/>\n          <Route exact path='/login' render={() => <Login getUser={this.getTheUser}/>}/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, \n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}