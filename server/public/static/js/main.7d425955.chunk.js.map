{"version":3,"sources":["components/auth/AuthService.jsx","components/auth/Signup.jsx","components/auth/Login.jsx","components/home/HomePage.jsx","api/service.js","components/map/MapComponent.jsx","components/map/MapView.jsx","components/profile/Profile.jsx","App.js","serviceWorker.js","index.js","components/auth/logo-blanco.svg"],"names":["AuthService","_this","this","Object","classCallCheck","signup","profile","service","post","then","response","data","login","username","password","loggedin","get","logout","axios","create","baseURL","concat","process","withCredentials","newUsername","put","res","catch","err","console","log","Signup","props","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","event","preventDefault","state","setState","redirect","getUser","error","handleChange","_event$target","target","name","value","objectSpread","defineProperty","_this2","react_default","a","createElement","className","react_router","to","src","Icon","alt","onSubmit","type","onChange","e","react_router_dom","Component","Login","Home","Service","errorHandler","handleUpload","theFile","saveNewPhoto","imageUrl","require","config","API_KEY","stylesArr","featureType","elementType","stylers","color","visibility","MyMapComponent","compose","withProps","googleMapURL","loadingElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","lib","defaultZoom","center","lat","lng","defaultOptions","styles","streetViewControl","scaleControl","mapTypeControl","panControl","zoomControl","rotateControl","fullscreenControl","isMarkerShown","position","MapView","delayedShowMarker","setTimeout","getGeoLocation","handleMarkerClick","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","currentLatLng","MapComponent","onMarkerClick","currentLocation","Profile","handleFileUpload","files","uploadData","FormData","append","apiService","newState","user","secure_url","logoutUser","authService","loggedInUser","coordinates","userLoad","campus","course","_this3","showTickOk","id","for","onClick","map_MapView","defaultProps","zoom","App","getTheUser","userObj","exact","path","component","HomePage","render","auth_Signup","auth_Login","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.7d425955.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (profile) => {\n    return this.service.post('/signup', {profile})\n    .then(response => response.data) \n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.post('/logout',)\n    .then(response => response.data)\n  }\n\n  updateUsername(newUsername) {\n    return this.service.put('/update', {username: newUsername})\n      .then(res => res.data)\n      .catch(err => {\n        console.log(err)\n      });\n  }\n\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport AuthService from './AuthService';\nimport { Redirect, Link } from 'react-router-dom';\nimport Icon from '../auth/logo-blanco.svg'\n\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '', redirect: false};\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const profile = {\n      username: this.state.username, \n      password: this.state.password, \n    }\n\n    this.service\n      .signup(profile)\n      .then((response) => {\n        this.setState({\n          username: '',\n          password: '',\n          redirect: true,\n        });\n        this.props.getUser(response)\n      })\n      .catch((error) => console.log(error));\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ ...this.state, [name]: value });\n\n    console.log(this.state)\n  };\n\n  render() {\n    return (\n      <div className=\"homepage-style\">\n        {this.state.redirect ? <Redirect to=\"/login\" /> : ''}\n        <div className=\"logo-styles\">\n          <img src={Icon} alt=\"\"></img>\n        </div>\n        <form onSubmit={this.handleFormSubmit}>\n         <div className=\"signup-styles\">\n          <label>Username:</label>\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={this.state.username}\n            onChange={(e) => this.handleChange(e)}\n          />\n          <br></br>\n          <label>Password:</label>\n          <input\n            name=\"password\"\n            value={this.state.password}\n            onChange={(e) => this.handleChange(e)}\n          />\n          </div>\n        <input className=\"input-style\" type=\"submit\" value=\"Signup\" />\n        </form>\n        <div className=\"signup-container\">\n          <p>\n            Already have account?\n          <Link to={'/login'}> Login</Link>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, {Component} from 'react';\nimport {Redirect, Link} from 'react-router-dom';\nimport AuthService from './AuthService';\nimport Icon from '../auth/logo-blanco.svg';\n\nclass Login extends Component {\n  constructor (props) {\n    super (props);\n    this.state = {username: '', password: '', redirect: false};\n    this.service = new AuthService ();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault ();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service\n      .login (username, password)\n      .then (response => {\n        this.setState ({\n          username: username,\n          password: password,\n          redirect: true,\n          error: false,\n        });\n        console.log (response);\n        this.props.getUser (response);\n      })\n      .catch (error => {\n        this.setState ({\n          username: username,\n          password: password,\n          error: true,\n        });\n      });\n  };\n\n  handleChange = event => {\n    const {name, value} = event.target;\n    this.setState ({...this.state, [name]: value});\n  };\n\n  render () {\n    return (\n      <div className=\"homepage-style\">\n        {this.state.redirect ? <Redirect to=\"/profile\" /> : ''}\n        <div className=\"logo-styles\">\n          <img src={Icon} alt=\"\" />\n        </div>\n        <form onSubmit={this.handleFormSubmit}>\n          <div className=\"signup-styles\">\n            <label>Username:</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              value={this.state.username}\n              onChange={e => this.handleChange (e)}\n            />\n            <br />\n            <label>Password:</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={this.state.password}\n              onChange={e => this.handleChange (e)}\n            />\n          </div>\n          <p>\n          {this.state.error\n              ? 'Please, confirm your user and your password'\n              : ''}\n          </p>\n          <input className=\"input-style\" type=\"submit\" value=\"Login\" />\n        </form>\n        <div className=\"signup-container\">\n          <p>\n            If you don't have an account yet, you can create your account\n            <Link to={'/signup'}> here</Link>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom'\nimport Icon from '../auth/logo-blanco.svg'\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"homepage-style\">\n        <div className=\"logo-styles\">\n          <img src={Icon} alt=\"\"></img>\n        </div>\n        <div className=\"home-container\">\n        <p>Comparte y compra equipamiento musical de segunda mano</p>\n        <Link className=\"link-style\" to={'/signup'}>Sign Up</Link>\n        <Link className=\"link-style\" to={'/login'}>Log In</Link>\n        </div>\n      </div>\n    )\n  }\n}","import axios from 'axios';\n\nclass Service {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/api`,\n    });\n    this.service = service;\n  }\n\n  errorHandler = err => {\n    console.error(err);\n    throw err;\n  };\n\n  handleUpload = (theFile) => {\n    return this.service.post('/upload', theFile)\n      .then(res => res.data)\n      .catch(this.errorHandler);\n  };\n\n  saveNewPhoto = (imageUrl , username) => {\n    console.log(imageUrl)\n    return this.service.post('/updatephoto', {imageUrl, username})\n      .then(res => res.data)\n      .catch(this.errorHandler);\n  }\n\n}\n\n\nexport default Service;\n","import React, { Component } from 'react';\nimport { compose, withProps } from 'recompose';\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker,\n} from 'react-google-maps';\n\nconst dotenv = require('dotenv');\ndotenv.config();\n\nconsole.log(process.env.API_KEY)\nconst stylesArr = [\n  {\n    featureType: 'administrative',\n    elementType: 'labels',\n    stylers: [\n      {\n        color: '#FFFFFF',\n      },\n      {\n        visibility: 'simplified',\n      },\n    ],\n  },\n  {\n    featureType: 'landscape.man_made',\n    elementType: 'all',\n    stylers: [\n      {\n        visibility: 'simplified',\n      },\n      {\n        color: '#303030',\n      },\n    ],\n  },\n  {\n    featureType: 'landscape.natural',\n    elementType: 'geometry',\n    stylers: [\n      {\n        color: '#000000',\n      },\n      {\n        visibility: 'simplified',\n      },\n    ],\n  },\n  {\n    featureType: 'poi',\n    elementType: 'geometry',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'poi',\n    elementType: 'labels.text',\n    stylers: [\n      {\n        visibility: 'simplified',\n      },\n      {\n        color: '#FFFFFF',\n      },\n    ],\n  },\n  {\n    featureType: 'road',\n    elementType: 'geometry',\n    stylers: [\n      {\n        visibility: 'simplified',\n      },\n      {\n        color: '#808080',\n      },\n    ],\n  },\n  {\n    featureType: 'road',\n    elementType: 'labels.text',\n    stylers: [\n      {\n        color: '#FFFFFF',\n      },\n      {\n        visibility: 'simplified',\n      },\n    ],\n  },\n  {\n    featureType: 'road',\n    elementType: 'labels.icon',\n    stylers: [\n      {\n        visibility: 'off',\n      },\n    ],\n  },\n  {\n    featureType: 'water',\n    elementType: 'all',\n    stylers: [\n      {\n        color: '#303030',\n      },\n      \n    ],\n  },\n];\nconst MyMapComponent = compose(\n  withProps({\n    googleMapURL:\n    `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_API_KEY}&callback=initMap`,\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `100%` }} />,\n    mapElement: <div style={{ height: `100%` }} />,\n  }),\n  withScriptjs,\n  withGoogleMap\n  )((props) => (\n    <GoogleMap\n    defaultZoom={9}\n    center={{ lat: 40.41, lng: -3.7 }}\n    defaultOptions={{\n      styles: stylesArr,\n      streetViewControl: false,\n      scaleControl: false,\n      mapTypeControl: false,\n      panControl: false,\n      zoomControl: true,\n      rotateControl: false,\n      fullscreenControl: false,\n    }}\n  >\n    {props.isMarkerShown && (\n      <Marker position={{ lat: 40.41, lng: -3.7 }} />\n    )}\n  </GoogleMap>\n));\n\nexport default MyMapComponent;\n","import React, { Component } from 'react'\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps'\nimport MapComponent from './MapComponent'\n\nclass MapView extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      currentLatLng: {\n        lat: 0,\n        lng: 0\n      },\n      isMarkerShown: false\n    }\n  }\n\n  componentWillUpdate(){\n    this.getGeoLocation()\n  }\n\n  componentDidMount() {\n    this.delayedShowMarker()\n  }\n\n  delayedShowMarker = () => {\n    setTimeout(() => {\n      this.getGeoLocation()\n      this.setState({ isMarkerShown: true })\n    }, 5000)\n  }\n\n  handleMarkerClick = () => {\n    this.setState({ isMarkerShown: false })\n    this.delayedShowMarker()\n  }\n\n  getGeoLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        position => {\n          this.setState({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude\n          })\n        }\n      )\n    }\n  }\n\n  render() {\n    return (\n      <MapComponent\n        isMarkerShown={this.state.isMarkerShown}\n        onMarkerClick={this.handleMarkerClick}\n        currentLocation={this.state.currentLatLng}\n      />\n    )\n  }\n}\n\nexport default MapView;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport apiService from '../../api/service';\nimport AuthService from '../auth/AuthService';\nimport MapView from '../map/MapView';\n\nexport default class Profile extends Component {\n  static defaultProps = {\n    center: {\n      lat: 40.41,\n      lng: -3.7,\n    },\n    zoom: 4,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {\n        username: '',\n        imageUrl: '',\n        coordinates: { lat: null, lng: null },\n      },\n    };\n\n    this.authService = new AuthService();\n    this.apiService = new apiService();\n    this.userLoad();\n  }\n\n  handleFileUpload = (e) => {\n    console.log('The file to be uploaded is: ', e.target.files[0]);\n\n    const uploadData = new FormData();\n    uploadData.append('imageUrl', e.target.files[0]);\n    this.apiService\n      .handleUpload(uploadData)\n      .then((response) => {\n        let newState = { ...this.state };\n        newState.user.imageUrl = response.secure_url;\n        this.setState({ newState }, () => {\n          this.apiService\n            .saveNewPhoto(this.state.user.imageUrl, this.state.user.username)\n            .then((data) => {\n              console.log(data);\n            });\n        });\n      })\n      .catch((err) => {\n        console.log('Error while uploading the file: ', err);\n      });\n  };\n\n  logoutUser = () => {\n    this.authService.logout().then((data) => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  userLoad() {\n    this.authService.loggedin().then((user) => {\n      let newState = { ...this.state };\n      newState.user.username = user.username;\n      newState.user.imageUrl = user.imageUrl;\n      newState.user.campus = user.campus;\n      newState.user.course = user.course;\n      this.setState({ newState });\n    });\n\n    console.log(this.state);\n  }\n\n  render() {\n    if (this.state.user) {\n      return (\n        <div className=\"homepage-style\">\n          <div className=\"profile-container\">\n            <div className=\"ul-container\">\n              <div className=\"align-profile\">\n                <h1 className=\"profile-user\">{this.state.user.username}</h1>\n                <img\n                  className=\"img-profile\"\n                  src={this.state.user.imageUrl}\n                  alt=\"\"\n                />\n              </div>\n              {this.state.showTickOk ? <p>updated ok</p> : ''}\n              <div className=\"edit-profile\">\n                <input\n                  type=\"file\"\n                  name=\"file\"\n                  id=\"file\"\n                  className=\"photo-input\"\n                  onChange={(e) => this.handleFileUpload(e)}\n                />\n                <label for=\"file\">Choose a file</label>\n              </div>\n              <Link to=\"/\">\n                <button\n                  className=\"input-profile\"\n                  onClick={() => this.logoutUser()}\n                >\n                  Logout\n                </button>\n              </Link>\n            </div>\n            <div className=\"map-styles\">\n              <MapView/>\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      return <h1>LOADING...</h1>;\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport Signup from './components/auth/Signup';\nimport Login from './components/auth/Login';\nimport HomePage from './components/home/HomePage'\nimport { Switch, Route } from 'react-router-dom';\nimport AuthService from './components/auth/AuthService';\nimport Profile from './components/profile/Profile';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n  }\n\n  fetchUser(){\n    if( this.state.loggedInUser === null ){\n      this.service.loggedin()\n      .then(response =>{\n        this.setState({\n          loggedInUser:  response\n        }) \n      })\n      .catch( err =>{\n        this.setState({\n          loggedInUser:  false\n        }) \n      })\n    }\n  }\n\n  getTheUser= (userObj) => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n  \n  render() {\n    return(\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={HomePage}/>\n          <Route exact path=\"/profile\" component={Profile}/>\n          <Route exact path=\"/signup\" render={() => <Signup getUser={this.getTheUser}/>}/>\n          <Route exact path='/login' render={() => <Login getUser={this.getTheUser}/>}/>\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>, \n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-blanco.f22945d7.svg\";"],"sourceRoot":""}